1. 정적 웹 페이지(static web page) & 동적 웹 페이지(dynamic web page)
  1) static web page
    - 웹 서버에 '저장되어 있는 파일을 그대로' 웹 브라우저에 전송해 출력하는 가장 기본적인 웹 페이지
    - 클라이언트가 어떤 형태로 요청하더라도 같은 페이지는 항상 동일한 모습을 보여줌
    - 웹 서버에 저장된 html, 이미ㅣㅈ 등
  2) dynamic web page
    - 동일한 페이지라 할지라도 그때그때 내용이 달라질 수 있는 웹 페이지
    - 서버가 클라이어트의 요청을 해석하여 가장 적절한 웹 페이지를 그때그때 생성해 보내주는 기술
    - 요청한 계정, 시간, 지역, 언어, 기타 입력값에 따라 다른 결과를 받음
    - 전처리 과정을 거쳐 응답 페이지를 동적으로 생성함
      ㆍJSP, 서블리
      ㆍASP
      ㆍPHP

2. 동적 웹 기술
  1) 서버 측에서 실행되는 서블릿(Servlet) 등장
    - 클라이언트의 요청을 받으면 서버에서 전처리 부분을 서블릿이 담당
    - 자바파일(.java)을 컴파일한 클래스 파일(.class) 형태
    - 서블릿 실행하고 관리해주는 런타임을 서블릿 컨테이너라고 함
      ㆍ대표적인 서블릿 컨테이너로 아파치 톰캣(Apache Tomcat)이 있음
  2) 서블릿 (Servlet)
    - 자바로 웹 애플리케이션을 개발할 수 있도록 만든 기술
    - 서버 단에서 클라이언트의 요청을 받아 처리한 후 응답하는 역할을 함
    - 특징
      ㆍ클라이언트의 요청에 대해 동적으로 작동하는 웹 애플리케이션 컨포넌트
      ㆍMVC 모델에서 컨트로러(Controller) 역할을 함
      ㆍ모든 메서드는 스레드로 동작함
      ㆍjakarta.servlet.http패키지의 HttpServlet 클래스를 상속받음
  3) 서블릿 컨테이너가  
    - 서블릿을 만들었다고 해서 스스로 작동하는 것은 아님
    - 서블릿을 관리하는 컨테이너가 필요함 => 서블릿 컨테이너임    
    - 서블릿 컨테이너로 톰캣을 사용함
    - 서블릿의 수명주기를 관리
      ㆍ수멍주기 관리 
        = 서블릿을 인스턴스화 후 초기화하고, 요청에 맞는 적절한 메서드를 호출함
        = 응답한 후에는 GC를 통해 객체를 소멸시킴
    - 요청이 오면 스레드를 생성해 처리해 줌
      ㆍ멀티스레딩 관리
        = 서블릿 요청들은 스레드를 생성해 처리함
        = 멀티스레드 방식으로 여러 요청을 동시에 처리할 수 있음
    - 클라이언트 요청을 받아서 응답을 보낼 수 있도록 통신을 지원해 줌
      ㆍ통신 지원
        = 클라이언트와 통신하려면 서버는 특정 포트로 소켓(Socket)을 열고
          I/O 스트림을 생성하는 등 복잡한 과정이 필요함 => 이과정을 API로 제공함
      
3. HTTP
  1) 웹 브라우저와 웹 애플리케이션 서버가 통신시 사용하는 프로토콜
  2) 클라이언트가 요청을 보내면, 서버가 응답하는 단순한 구조로 만들어짐
  3) 각각의 요청과 응답은 모두 독립적인 요청과 응답임
  4) HTTP 요청
    - HTTP 메서드 (GET, POST)와 콘텐츠 주소(URL)
    - 요청 헤더 
    - 요청 본문(쿼리 스트링, 폼 데이터)
    
4. HTTP 요청


클라이언트의 요청으로 

      servlet
    - 
    
  