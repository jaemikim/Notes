1. HttpServletRequest의 메서드
     http://localhost/httpweb/DayOfTheWeek?year=2023&month=12&day=6   <-- 80은 생략해서 보여준다
  1) http://localhost:8080/httpweb/DayOfTheWeek?year=2023&month=12&day=6
     ----
  getScheme()
          -----------
         getServerName() -localhost
                      -----
                     getServerPort() - :8080
                           ---------
                           getContextPath() - httpweb
                                    --------------
                                    getServletPath() - /DayOfTheWeek?
                                                 --------------------------
                                                 getQueryString() - ?year=2023&month=12&day=6
              
    -----------------------------------------------------
    getRequestURL() - http://localhost:8080/httpweb/DayOfTheWeek
                              -----------------------------
                              getRequestURI - /httpweb/DayOfTheWeek

2. URL (Uniform Resource Locators)
  1) 인터넷 상에서 자원이 어디 있는지를 알려주기 위한 주소 규약
  2) 웹 페이지 뿐만 아니아 네트워크상의 모든 자원에 대한 주소를 표현할수 있음
  3) 대부분의 URL은 아래 형식으로 표시할수 있음 []로 표시된 부분을 생략가능함
     
     protocol://[host.]domain[:port][/context][/resource]


3. 클라이언트와 서버
  1) 클라이언트 : 서비스를 요청하는 애플리케이션(or 컴퓨터)
  2) 서버 : 서비스를 제공하는 애플리케이션(or 컴퓨터)
     - Web Server (80)
      ㆍ웹 애플리케이션 서버(WAS - tomcat)
        = 웹 애플리케이션을 서비스하는 서버
        = 서버에 프로그램을 설치해 놓고 클라이언트가 이 프로그램을 사용 할 수 있게 해주는 것
          - 클라이언트가 원격으로 호출
     - Email Server (25)
     - File Sever (22)
     - 서버가 제공하는 리소스
      ㆍ정적리소스
        = 이미지, *.html *.css, *.js, 리소스 내용이 고정되어 있는 것
        = 변한지 않는 콘텐트
      ㆍ동적 리소스(자원)
        = 프로그램, 스크리밍(라이브방송), 리소스 내용이 고정되어 있지 않은 것
        = WAS는 HTTP 요청을 해석해 프로그램 실행 후 결과 값으로 만든 콘텐트 
  3) 웹 프로그래밍
    - 브라우저로 프로그램을 호출해서 서버에 요청
    - 서버는 그 프로그램을 실행해서 html로 나오는 결과를 Text문서(문자열)로 만들어서 브라우저로 보냄
    - 브라우저가 html을 보여줌 

4. Tomcat의 내부 구조
  URL : http://localhost/himediaweb/rollDice

  1) Server(Tomcat)
    -> Service
    --> Engine (Catalina)
    ---> Host : localhost   //www.google.com
    ----> Context (스프링 프로젝트) : /himediaweb
    -----> Servlet (작은 서버 프로그램 = 컨트롤러) : /rollDice

  2) 실행 순서
    - run() -> ThreadPool -> HTTP11PRocessor -> Engine -> Host -> Context -> Filter -> DispatcherServlet -> Controller -> dice()
          
5. Tomcat의 설정 파일
  1) 톰캣설치경로 / conf / server.xml
    - Tomcat 서버 설정 파일 
  2) 톰캣설치경로 / conf / web.xml 
    - Tomcat의 모든 web app의 공통 설정
  3) 개별프로젝트 / WEB-INF /web.xml
    - web app의 개별 설정
    - context(프로젝트)마다 하나씩 있음 
      


getprmiter
?year=2023&month=12&day=6