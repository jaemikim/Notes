1. 함수 (Function)
  1) 하나의 기능을 수행하는 일련의 코드 
  2) 구현된(정의된) 함수는 호출하여 사용하고
     호출된 함수는 기능이 끝나면 제어가 반환됨
  3) 함수로 구현된 하나의 기능은 여러 곳에서 동일한 방식으로 호출되어 사용될 수 있음
  4) 

2. 함수 호출과 스택 메모리
  1) 스택(Stack)
    - 함수가 호출 될 때 지역 변수들이 사용하는 메모리
    - 함수의 수행이 끝나면 자동으로 반환 되는 메모리 
  2) 메서드(method)
    - 겍체의 기능을 구현하기 위해 클래스 내부에 구현되는 함수
    - 멤버 함수(member function)라고도 함
    - 메서드를 구현함으로써 객체의 기능이 구현 됨
    - 메서드의 이름은 그 객체를 사용하는 객체(클라이언트)에 맞게 짓는 것이 좋음
      ㆍ예) getStudentName()

3. 인스턴스(instance) 생성과 힙 메모리
  1) 인스턴스 
    - 클래스는 객체의 속성을 정의하고, 기능을 구현하여 만들어 놓은 코드 상태
    - 실제 클래스 기반으로 생성된 객체(인스턴스)는 각각 다른 멤버 변수 값을 가지게 됨
      ㆍ학생의 클래스에서 생성된 각각의 인스턴스는 각각 다른 이름, 학번, 학년등의 값을 가지게 됨
    - new 키워드를 사용하여 인스턴스 생성 
  2) 힙(heap)
    - 생성된 인스턴스는 힙 동적 메모리에 할당됨
    - 자바에서 Gabage Collector가 주기적으로 사용하지 않는 메모리를 수거
    - 하나의 클래스로부터 여러개의 인스턴스가 생성되고 각각 다른 메모리 주소를 가지게 됨

4. 자바의 메모리 모델
  1) java.exe가 실행되면서 자바 가상 머신이 만들어짐
  2) 자바는 메모리 공간 활용 효율성 높이기 위해 메모리 공간을 여러 영역으로 나누게 됨
  3) 가비지 컬렉션(Gabage Collection)이 수행되는 동안에는 모든 스레드가 멈추게 됨
    - 실행 타이밍은 시스템의 성능에 영향을 미치지 않도록 별도 알고리즘으로 계산되어 실행됨

5. 용어 정리 
  1) 객체 : 객체 지향 프로그램의 대상, 생성된 인스턴스 
  2) 인스턴스 : new 키워드를 사용하여 클래스를 메모리에 생성한 상태
  3) 클래스 : 객체를 프로그래밍 하기 위해 코드로 정의해 놓은 상태 
  4) 멤버 변수 : 클래스의 속성, 특성, 필드
  5) 메서드 : 멤버 변수를 이용하여 클래스의 기능을 구연한 함수 
  6) 참조변수 : 메모리에 생성된 인스턴스를 가리키는 변수
  7) 참조 값 : 생성된 인스턴스의 메모리 주소 값 
  
    




JDK에서 처리 
- java source Files (.java)
- 컴파일 (javac.exe)
- java Byte code (.class)
     \|/
      |  run을 하는 순간(실행하는 순간) java.exe  - 원격프로세서 호출(JVM)
     /|\
JVM이 동작함
class loader
Execute


JVM의 Memory model(Runtime Data Area)
Thread - Stack Area(Call Stack Frame Area)
       - Heap Area
       - Runtime Constant Pool(Literal Pool)
       - Method Area

*** 메모리에 올라간것을 프로세스라고 한다.
*** 프로세스는 하나이상의 스레드로 구성된다.

*** 런타임 Data 영역들
메서드 역역 - 프로그램 실행 코드 
           - static 영역
           - 상수 풀

스택 역역 - method1 frame - 지역변수
                         - 매개변수
         - method2 frame - 지역변수
                         - 매개변수
                 .....
힙 영역 - 객체 1
         객체 2 .....

스택 영역에 있는 method의 지역변수가 힙 영역의 객체 연결된다. 
자바를 실행하면 운영체제(JVM 구동되면서)

운영체제(윈도우, 리눅스 등등) -> JVM -> MemoryInStack -> 메서드 영역 ( 상수 추려내기, static 추려내기, jvm-main()) -> 스택 영역 (메소드 쌓임) 실행되고 나면 제거됨 -> 힙 클래스의 객체

