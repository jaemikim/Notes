0. 키보드(콘솔)로부터 데이터를 입력 받는 방법
  1) java.util.Scanner
  2) Scanner scan = new Scanner(System.in)
     scan.close();
  3) int num = scan.nextInt();        //정수입력
     float num = scan.nextFloat();    //실수입력
     double num = scan.nextDouble();  //실수입력
     string str = scan.next();        //문자열 입력 (공백 앞까지 입력 받음)
     string str = scan.nextLine();    //문자열 입력 (엔터까지 입력 받음)
     scan.nextLine();                 //버퍼비우기

 0-2. 콘솔 출력
  1) 콘솔
    - 컴퓨터를 대상으로 데이터를 입력 및 출력하는 장치를 총칭하는 말임.
    - 대표장치 : 키보드, 모니터
  2) System.out.println()    
     System.out.print()    
     System.out.printf()
  3) printf()
    - 문자열의 내용을 조합하여 출력하는 기능 제공
    - System.out.printf("포맷 문자열", 데이터, 데이터, 데이터, .....);
    - 출력 서식 지정자
      ㆍ%d          10진수 정수 형태 출력
      ㆍ%o          8진수 정수 형태 출력
      ㆍ%x          16진수 정수 형태 출력
      ㆍ%f          실수 출력
      ㆍ%s          문자열 출력
      ㆍ%c          문자 출력
    - 예
      - System.out.printf("%d, %f, %c, %s", 10, 3.14, 'A', "이순신");    

1. 항과 연산자
  1) 항(operand) : 연산에 사용되는 값
  2) 연산자(operator) : 항을 이용하여 연산하는 기호
  
2. 연산자의 종류
  - 단항영산자, 이항연산자, 삼항연산자

3. 대입 연산자(assignment operator)
  - 변수에 다른 변수나 값을 대입하는 연산자
  - 이항 연산자 중 우선 순위가 가장 낮은 연산자
  - 왼쪽 변수 = 오른쪽 변수(식, 값)

4. 단항 연산자
  1) 부호 연산자
    - 변수의 부호를 유지하거나(+) 바뀜(-)
    - 실제 변수의 부호가 변하려면 대입 연산자를 사용해야 함
  2) 복합 대입 연산자를 
    - 대입 연산자와 다른 연산자가 함께 쓰임
    - 종류
       a += b         a = a + b
       a -= b         a = a - b
       a *= b         a = a * b
       a /= b         a = a / b
       a %= b         a = a % b  

       변수(L-Value) = 수식(R-Value)          
  3) 증가, 감소 연산자 
    - 변수의 값을 1 더하거나 1을 뺄때 사용 
    - 연산자가 항의 앞에 있는가 뒤에 있는가에 따라 연산 시점과 결과가 달라짐    
    - 증가 연산자가
      ㆍ++
      ㆍ++a 전위 a의 값이 1이 증가 => a의 값 사용  
      ㆍa++ 후위 a의 값을 사용 => a의 값 1 증가
      ㆍ--
      ㆍ--a 전위 a의 값이 1이 감소 => a의 값 사용  
      ㆍa-- 후위 a의 값을 사용 => a의 값 1 감소

5. 이항연산자
  1) 산술연산자
  2) 복합대입연산자
  3) 논리연산자 

6. 산술연산자
  - 사칙연산자(+, -, *, /, %)

7. 관계 연산자
  - 연산의 결과가 true(참), false(거짓)으로 반환 됨
  - 비교 연산자 ( >, <, >=, <=, 
    == - 두개의 항의 값이 같으면 참 다르면 거짓, 
    != 두 개의 항이 다르면 참, 아니면 거짓 반환)
  - 조건문, 반복문의 조건식으로 많이 사용됨

8. 논리 연산자
  - &&(AND), ||(OR), !(NOT)
  - 연산의 결과가 참(true) 아니면 거짓(false)
  - 관계 연산자와 혼합하여 사용 됨
  - a && b 
    ㆍ논리곱(and 연산)
    ㆍa,b가 둘 다 참이면 참이고, 그렇지 않으면 거짓
  - a || b 
    ㆍ논리합(or 연산)
    ㆍa, b 중 하나라도 참이면 참이고, 그렇지 않으면 거짓 
  - short circuit evaluation()
    ㆍ모든 항이 실행되지 않는 경우
    ㆍ논리 곱(&&)은 두 항의 결과가 모두 true일 때만 결과가 true
      = 앞의 항의 결과가 false이면 뒤 항의 결과를 평가하지 않음
    ㆍ논리 합(||)은 두 항의 결과가 모두 false일 때만 결과가 false
      = 앞의 항의 결과가 true이면 뒤 항의 결과를 평가하지 않음

9. 삼항연산자
  1) 조건 연산자
  2) 조건식의 결과가 true인 경우와 false인 경우에 따라 다른 결과가 수행됨
  3) if (조건문)을 간단히 표현할 때 사용 할수 있음
  4) (조건식) ? A : B
    - 조건식이 참이 경우 결과 값은 A
    - 조건식이 거짓인 경우 결과 갑은 B

4. 조건이 여러 개 일 때의 if문 
  1) 다중 if문 
      if(조건식 A) {
          문장1;    // 조건식 A가 참일 때 실행
        } else if (조건식 B) {
          문장2;    // 조건식 A가 거짓이고 조건식 B가 참일 때 실행
        } else if (조건식 C) {
          문장3;    // 조건식 A,B가 거짓이고 조건식 C가 참일 때 실행
        }...... 
          else    {
          문장n;  //조건식 A,B,C....가 거짓일 때 실행
        }

  2) 중첩 if문 
    - if문 안의 문장이 또 다른 if문인 경우 
        

*** F11 디버그 모드로 
    F6 체크포인트 확인한다 

    static은 공유 목적으로 사용한다. 