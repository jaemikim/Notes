1. 조건문 
  1) 주어진 조건에 따라 다른 실행이 이루어지도록 구현
  2) 비유
    - '재산이 1000천만원 이상이면 10만원을 세금으로 낸다. 
      그렇지 않으면 내지 않는다.'
    - 만약에(재산이 1000천만원 이상이면) {
      10만원을 세금으로 낸다. 
    } 그렇지 않으면 {
      내지 않는다. 
    }

2. 단순 if
  1) 조건식이 참이면 중괄호로 둘러 쌓인 블록 안의 문장들이 실행됨
  2) 
        if(조건식) {
          문장 1 ;   // 조건식이 참이면 실행되는 문장
          문장 2 ;   // 조건식이 참이면 실행되는 문장
        }

        if(조건식)
          한문장;

3. 블럭 if문 (if ~ else 문)
  1) if의 조건식이 참이면 조건식 바로 다음의 블록이 실행되고, 
     조건식이 거짓이면 else문 다음의 블록이 실행됨
  2)
     in(조건식){
        문장 1 ;   // 조건식이 참이면 실행되는 문장
     } else {
        문장 2 ;   // 조건식이 거짓일때 실행되는 문장
     }

4. 조건이 여러 개 일 때 if문
  1) 다중 if문
    if(조건식 A) {
        문장 1 ;   // 조건식A이 참일 때 실행
     } else if(조건식 B) {
        문장 2 ;   // 조건식A가 거짓이고 조건식 B가 참일 때 실행
     } else if(조건식 C) {
        문장 3 ;   // 조건식A,B가 거짓이고 조건식 C가 참일 때 실행
     } ....
     else {
        문장n;      //조건식 A,B,C가 거짓일 때 실행
     }
  2) 중첩 if문
     - if문 안의 문장이 또 다른 if문이 경우

5. switch ~ case 문
  1) 주로 다중 선택에 사용하는데, 다중 if문보다 간결
  2) 대신에 사용 영역이 if-else에 비해 제한적
  3)
    switch(수식){
        case 상수1:
             문장1;
             break;       //필요하면 사용(break를 만나면 switch 블록 탈출)
        case 상수2:
             문장2;
             break;       //필요하면 사용 
             .....   
           default;       //필요하면 사용 
             문장n;
    }  
  4) 비교 조건이 특정 값이나 문자열인 경우 사용
  5) break문을 사용하여 각 조건이 만족되면 switch 블록을 빠져 나오도록 함 
  6) 좀더 간결해진 표현식 지원됨
    - Java 14 부터 사용가능함
    - break문 사용 안함

6. switch 표현식 (Java14)
  1) 간단하게 쉼표(,)로 조건 구분
  2) 식으로 표현하여 반환을 받을 수 있음. 리턴값이 없은 경유는 오류가 생김
  3) yield 키워드 사용 


OOP 
함수형 프로그래밍

이클립스 단축키 
추천 완성 : ctrl + space
자동 정렬 : ctrl + shift + f
해당 행 삭제 : ctrl + d
대문자 변환 : ctrl + shift + x
소문자 변환 : ctrl + shift + y
범위 들여 쓰기 : tab
범위 내어 쓰기 : shift + tab
범위 주석 : ctrl + shift + /   => /* */ 이런 형태
범위 주석 해제 : ctrl + shift + \ 
주석 : ctrl + /  => // 이런 형태 범위를 지정해서 써도 상관없이 동작됩니다.
매서드나 필드가 참조하고 있는 곳 표시 : ctrl + shift + g
getter, setter 자동 생성 : alt + shift + s + r
default 생성자 자동 생성 : alt + shift + s + c
저장 : ctrl + s
되돌리기 : ctrl + z
디버깅 : f11
디버깅 및 실행 : ctrl + f11